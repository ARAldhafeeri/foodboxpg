pipeline {
    agent any 
    
    tools {
        maven "maven-3.8.6"
        dockerTool "Docker"
    }
    
   environment {
        max = 334
        randomTag = "${Math.abs(new Random().nextInt(max+1))}"
        awsRegion = "us-east-1"
        ecrRegistry = "public.ecr.aws/e7a8a6g2"

    }

    stages {
        stage("verify"){
            steps{
                sh "docker-compose -v"
                sh "which aws"

            }
        }
        stage("build") {
            steps {
                
                sh 'rm -rf -d foodboxpg'
                sh 'git clone -b main https://github.com/ARAldhafeeri/foodboxpg.git'
                dir("foodboxpg"){
                    sh "mvn install -DskipTests"

                }
            }
        }

        stage("Dockerize") {
            steps {
                script {
                     dir("foodboxpg"){
                       def dockerImage = "foodboxpg-app"
                       def dockerRegistry = "araldhafeeri"

                        sh "docker-compose build"
                        sh " docker tag foodboxpg-app:latest 138027256800.dkr.ecr.us-east-1.amazonaws.com/foodbox:latest"


                     }
                    
                 }
            }
        }
        stage("run integration tests"){
            steps{
                dir("foodboxpg"){
                    sh "mvn test"
                }
            }
        }
        
        stage('Logging into AWS ECR') {
            steps {
                script {
                     withEnv(["AWS_ACCESS_KEY_ID=${env.AWS_ACCESS_KEY_ID}", "AWS_SECRET_ACCESS_KEY=${env.AWS_SECRET_ACCESS_KEY}", "AWS_DEFAULT_REGION=${env.AWS_DEFAULT_REGION}"]) {
                        sh '''docker login -u AWS 138027256800.dkr.ecr.us-east-1.amazonaws.com -p $(aws ecr get-login-password --region us-east-1)'''
                    
                     }
                }
                 
            }
        }
        
        stage("Publish to aws ecr") {
            steps {
                script {
                    def dockerImage = "foodbox"
                    def dockerRegistry = "araldhafeeri"
                     withEnv(["AWS_ACCESS_KEY_ID=${env.AWS_ACCESS_KEY_ID}", "AWS_SECRET_ACCESS_KEY=${env.AWS_SECRET_ACCESS_KEY}", "AWS_DEFAULT_REGION=${env.AWS_DEFAULT_REGION}"]) {
    
                        // sh  "docker login --username AWS -p $(aws ecr get-login-password --region us-east-1) public.ecr.aws/e7a8a6g2"
                        sh  "docker push 138027256800.dkr.ecr.us-east-1.amazonaws.com/foodbox:latest"
                     }
                }
            }
        }
        
        stage("deploy to ecs") {
            steps {
                script {
                    sh "aws ecs update-service --cluster FoodBox2 --service foodbox --force-new-deployment"
                }
            }  
        }


    post {
        always {
            cleanAfterCheckout()
        }
    }
}
